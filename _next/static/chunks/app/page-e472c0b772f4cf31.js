(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[974],{5907:(e,t,s)=>{Promise.resolve().then(s.bind(s,9809))},9809:(e,t,s)=>{"use strict";s.r(t),s.d(t,{default:()=>o});var l=s(5155),n=s(2115),a=s(9092),r=s(6911),c=s(2818);let o=()=>{let{walletConnected:e,walletAddress:t,mockERC20Balance:s,mockUSDCBalance:o,connectWallet:i}=(0,a.v)();return(0,n.useEffect)(()=>{console.log("env var check ",c.env.NEXT_PUBLIC_API_URL)},[]),(0,l.jsx)("div",{className:"min-h-screen bg-gray-50 flex flex-col items-center justify-center px-4",children:(0,l.jsxs)("div",{className:"bg-white shadow-lg rounded-lg p-6 w-full max-w-lg",children:[(0,l.jsx)("h1",{className:"text-2xl font-bold text-gray-800 text-center mb-6",children:"Wallet Information"}),e?(0,l.jsxs)("div",{className:"space-y-4",children:[(0,l.jsxs)("div",{className:"text-center",children:[(0,l.jsx)("h2",{className:"text-lg font-semibold text-gray-600",children:"Connected Wallet Address:"}),(0,l.jsx)("p",{className:"mt-2 text-purple-700 font-mono break-all",children:t})]}),(0,l.jsxs)("div",{className:"mt-6",children:[(0,l.jsx)("h3",{className:"text-lg font-semibold text-gray-600",children:"Token Balances:"}),(0,l.jsxs)("div",{className:"flex justify-between items-center mt-4",children:[(0,l.jsx)("span",{className:"text-gray-700",children:"MockERC20:"}),(0,l.jsx)("span",{className:"text-purple-700 font-semibold",children:s})]}),(0,l.jsxs)("div",{className:"flex justify-between items-center mt-4",children:[(0,l.jsx)("span",{className:"text-gray-700",children:"MOCK_USDC:"}),(0,l.jsx)("span",{className:"text-purple-700 font-semibold",children:o})]})]})]}):(0,l.jsxs)("div",{className:"text-center",children:[(0,l.jsx)("p",{className:"text-gray-600 mb-6",children:"No wallet connected. Please connect your wallet to view balances."}),(0,l.jsx)(r.A,{onClick:i,className:"bg-blue-500 hover:bg-blue-600 text-white px-4 py-2 rounded-lg",children:"Connect Wallet"})]})]})})}},6911:(e,t,s)=>{"use strict";s.d(t,{A:()=>n});var l=s(5155);s(2115);let n=e=>{let{onClick:t,className:s,disabled:n,children:a}=e;return(0,l.jsx)("button",{onClick:t,disabled:n,className:"py-2 px-4 rounded-lg font-medium transition ".concat(n?"bg-gray-300 text-gray-500 cursor-not-allowed":"bg-blue-500 hover:bg-blue-600 text-white"," ").concat(s),children:a})}},9092:(e,t,s)=>{"use strict";s.d(t,{WalletProvider:()=>c,v:()=>o});var l=s(5155),n=s(2115),a=s(7186);let r=(0,n.createContext)(void 0),c=e=>{let{children:t}=e,[s,c]=(0,n.useState)(!1),[o,i]=(0,n.useState)(null),[d,h]=(0,n.useState)("0.00"),[u,x]=(0,n.useState)("0.00"),m=async()=>{if(!window.ethereum){alert("MetaMask is not installed");return}try{let e=window.ethereum,t=new a.k(e),s=await t.send("eth_accounts",[]);if(s.length>0){console.log("Already connected:",s[0]),c(!0),i(s[0]);return}let l=await t.getSigner(),n=await l.getAddress();c(!0),i(n)}catch(e){console.error("Error connecting wallet:",e)}},g=async e=>{0===e.length?(console.log("Wallet disconnected"),c(!1),i(null),h("0.00"),x("0.00")):i(e[0])},v=e=>{console.log("Chain changed to: ".concat(parseInt(e,16))),m()};return(0,n.useEffect)(()=>{if(window.ethereum){let e=window.ethereum;return e.on("accountsChanged",g),e.on("chainChanged",v),()=>{e.removeListener&&(e.removeListener("accountsChanged",g),e.removeListener("chainChanged",v))}}},[]),(0,l.jsx)(r.Provider,{value:{walletConnected:s,walletAddress:o,mockERC20Balance:d,mockUSDCBalance:u,connectWallet:m},children:t})},o=()=>{let e=(0,n.useContext)(r);if(!e)throw Error("useWallet must be used within a WalletProvider");return e}}},e=>{var t=t=>e(e.s=t);e.O(0,[186,441,517,358],()=>t(5907)),_N_E=e.O()}]);